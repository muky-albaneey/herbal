{
  "version": 3,
  "sources": ["../../react-whatsapp-widget/src/contexts/chat.context.jsx", "../../react-whatsapp-widget/src/components/chat-box/chat-box.component.jsx", "../../react-whatsapp-widget/src/components/header/header.component.jsx", "../../react-whatsapp-widget/src/components/send-button/send-button.jsx", "../../react-whatsapp-widget/src/components/wa-button/wa-button.component.jsx", "../../react-whatsapp-widget/src/components/app/app.component.jsx", "../../react-whatsapp-widget/src/index.js"],
  "sourcesContent": ["import React from 'react'\nimport { createContext, useState } from 'react'\n\nexport const ChatContext = createContext({\n  isChatOpen: false,\n  setIsChatOpen: () => {}\n})\n\nexport const ChatProvider = ({ children }) => {\n  const [isChatOpen, setIsChatOpen] = useState(false)\n\n  const value = {\n    isChatOpen,\n    setIsChatOpen\n  }\n\n  return <ChatContext.Provider value={value}>{children}</ChatContext.Provider>\n}\n", "import React from 'react';\nimport styles from './chat-box.module.css';\n\nconst defaultProps = {\n    companyName: 'Support',\n    message: `Hello! 👋🏼 \\n\\nWhat can we do for you?`,\n};\n\nconst ChatBox = ({\n    companyName = defaultProps.companyName,\n    message = defaultProps.message,\n}) => {\n    const time = new Date().toTimeString().split(`:`).slice(0, 2).join(`:`);\n\n    return (\n        <div className={styles.root}>\n            <div className={styles.message}>\n                <span className={styles.triangle_top_right} />\n                <span className={styles.message_title}>{companyName}</span>\n                <p className={styles.message_body}>{message}</p>\n                <span className={styles.message_time}>{time}</span>\n            </div>\n        </div>\n    );\n};\n\nexport default ChatBox;\n", "import React, { useContext } from 'react';\nimport { BiSupport } from 'react-icons/bi';\nimport { AiOutlineClose } from 'react-icons/ai';\nimport { ChatContext } from '../../contexts/chat.context';\nimport styles from './header.module.css';\n\nconst defaultProps = {\n    companyName: 'Support',\n    replyTimeText: 'Typically replies within a day',\n};\n\nconst Header = ({\n    CompanyIcon,\n    companyName = defaultProps.companyName,\n    replyTimeText = defaultProps.replyTimeText,\n}) => {\n    const { setIsChatOpen } = useContext(ChatContext);\n\n    const handleOpen = () => {\n        setIsChatOpen(false);\n    };\n\n    return (\n        <div className={styles.root}>\n            <span className={styles.close_btn} onClick={handleOpen}>\n                <AiOutlineClose />\n            </span>\n            <div className={styles.logo}>\n                {(CompanyIcon && <CompanyIcon />) || <BiSupport />}\n            </div>\n            <div className={styles.texts}>\n                <span className={styles.texts_h1}>{companyName}</span>\n                <span className={styles.texts_span}>{replyTimeText}</span>\n            </div>\n        </div>\n    );\n};\n\nexport default Header;\n", "import React, { useState } from 'react';\nimport styles from './send-button.module.css';\n\nconst defaultProps = {\n    sendButtonText: 'Send',\n    inputPlaceHolder: 'Type a message',\n};\n\nconst SendButton = ({\n    phoneNumber,\n    inputPlaceHolder = defaultProps.inputPlaceHolder,\n    sendButtonText = defaultProps.sendButtonText,\n}) => {\n    const [message, setMessage] = useState('');\n\n    const handleClick = () => {\n        if (!phoneNumber) {\n            window.alert('Invalid Phone Number');\n            return false;\n        }\n        window.open(`https://wa.me/${phoneNumber}?text=${message}`);\n        setMessage('');\n    };\n\n    const handleChange = (e) => {\n        setMessage(e.target.value);\n    };\n\n    return (\n        <div className={styles.root}>\n            <input\n                placeholder={inputPlaceHolder}\n                className={styles.input}\n                onChange={handleChange}\n                value={message}\n            />\n            <button className={styles.button} onClick={handleClick}>\n                {sendButtonText}\n            </button>\n        </div>\n    );\n};\n\nexport default SendButton;\n", "import React, { useContext } from 'react';\nimport { FaWhatsapp } from 'react-icons/fa';\nimport { ChatContext } from '../../contexts/chat.context';\nimport styles from './wa-button.module.css';\n\nconst WaButton = () => {\n    const { isChatOpen, setIsChatOpen } = useContext(ChatContext);\n\n    const handleOpen = () => {\n        setIsChatOpen(!isChatOpen);\n    };\n\n    return (\n        <div className={styles.root} onClick={handleOpen}>\n            <FaWhatsapp />\n        </div>\n    );\n};\n\nexport default WaButton;\n", "import React, { useContext, Fragment, useEffect } from 'react';\n\nimport { ChatContext } from '../../contexts/chat.context';\nimport ChatBox from '../chat-box/chat-box.component';\nimport Header from '../header/header.component';\nimport SendButton from '../send-button/send-button';\nimport WaButton from '../wa-button/wa-button.component';\nimport styles from './app.module.css';\n\nconst App = (props) => {\n    const { isChatOpen, setIsChatOpen } = useContext(ChatContext);\n    useEffect(() => {\n        if (props.open) {\n            setIsChatOpen(true);\n        }\n    }, []);\n\n    return (\n        <Fragment>\n            <div\n                className={`${styles.root} ${\n                    isChatOpen ? styles.open : styles.close\n                }`}\n            >\n                <Header {...props} />\n                <ChatBox {...props} />\n                <SendButton {...props} />\n            </div>\n            <WaButton />\n        </Fragment>\n    );\n};\n\nexport default App;\n", "import React from 'react';\nimport App from './components/app/app.component';\n\nimport { ChatProvider } from './contexts/chat.context';\n\nexport const WhatsAppWidget = (props) => {\n    return (\n        <ChatProvider>\n            <App {...props} />\n        </ChatProvider>\n    );\n};\n"],
  "mappings": "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",
  "names": ["ChatContext", "createContext", "isChatOpen", "setIsChatOpen", "ChatProvider", "_ref", "children", "_useState", "useState", "value", "React", "createElement", "Provider", "defaultProps", "companyName", "message", "ChatBox", "_ref$companyName", "_ref$message", "time", "Date", "toTimeString", "split", "slice", "join", "className", "styles", "root", "triangle_top_right", "message_title", "message_body", "message_time", "replyTimeText", "Header", "CompanyIcon", "_ref$replyTimeText", "_useContext", "useContext", "handleOpen", "close_btn", "onClick", "AiOutlineClose", "logo", "BiSupport", "texts", "texts_h1", "texts_span", "sendButtonText", "inputPlaceHolder", "SendButton", "phoneNumber", "_ref$inputPlaceHolder", "_ref$sendButtonText", "setMessage", "handleClick", "window", "alert", "open", "handleChange", "e", "target", "placeholder", "input", "onChange", "button", "WaButton", "FaWhatsapp", "App", "props", "useEffect", "Fragment", "close", "WhatsAppWidget"]
}
